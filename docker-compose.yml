version: '3.7'

services:
  kafka:
    image: bitnami/kafka:3.1.0-debian-10-r18
    container_name: kafka
    restart: unless-stopped
    user: "0"
    ports:
      - "9092:9092"
    volumes:
      - ./docker/kafka/entrypoint.sh:/sbin/entrypoint.sh:z
      - kafka_data:/tmp/kafka-data:z
      - ./docker/kafka/server.properties:/opt/bitnami/kafka/config/kraft/server.properties:z
    # https://github.com/confluentinc/cp-all-in-one/blob/7.0.0-post/cp-all-in-one-kraft/docker-compose.yml
    entrypoint: /sbin/entrypoint.sh

  # https://docs.confluent.io/current/ksql/docs/installation/install-ksql-with-docker.html
  ksqldb:
    image: confluentinc/ksqldb-server:0.23.1
    container_name: ksqldb
    restart: unless-stopped
    ports:
      - "8088:8088"
    depends_on:
      - kafka
    environment:
      # https://docs.ksqldb.io/en/latest/operate-and-deploy/installation/install-ksqldb-with-docker/#mount-volumes
      KSQL_BOOTSTRAP_SERVERS: "kafka:29092"
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
    volumes:
      - ./docker/ksqldb/migrations:/share/ksql-migrations:z


# docker exec -it ksqldb-cli ksql http://ksqldb:8088
#  ksqldb-cli:
#    image: confluentinc/ksqldb-cli:0.22.0
#    container_name: ksqldb-cli
#    depends_on:
#      - kafka
#      - ksqldb
#    entrypoint: /bin/sh
#    tty: true

volumes:
  kafka_data:
  kafka_kraft_data: