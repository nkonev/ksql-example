version: '3.7'

services:
  kafka:
    image: bitnami/kafka:3.2.0-debian-10-r7
    container_name: kafka
    restart: unless-stopped
    user: "0"
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_CFG_ADVERTISED_LISTENERS: 'INTERNAL://kafka:29092,PLAINTEXT_HOST://127.0.0.1:9092'
      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_CFG_JMX_PORT: 9101
      KAFKA_CFG_JMX_HOSTNAME: localhost
      KAFKA_CFG_PROCESS_ROLES: 'broker,controller'
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_CFG_LISTENERS: 'INTERNAL://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://:9092'
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CFG_LOG_DIRS: "/var/lib/kafka-data/kraft"
    volumes:
      - ./docker/kafka/entrypoint.sh:/sbin/entrypoint.sh:z
      - kafka_data:/var/lib/kafka-data:z
    # https://github.com/confluentinc/cp-all-in-one/blob/7.0.0-post/cp-all-in-one-kraft/docker-compose.yml
    entrypoint: /sbin/entrypoint.sh

  # https://docs.confluent.io/current/ksql/docs/installation/install-ksql-with-docker.html
  ksqldb:
    image: confluentinc/ksqldb-server:0.26.0
    container_name: ksqldb
    restart: unless-stopped
    ports:
      - "8088:8088"
    depends_on:
      - kafka
    environment:
      # https://docs.ksqldb.io/en/latest/operate-and-deploy/installation/install-ksqldb-with-docker/#mount-volumes
      KSQL_BOOTSTRAP_SERVERS: "kafka:29092"
      KSQL_LISTENERS: "http://0.0.0.0:8088"
      KSQL_CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
    volumes:
      - ./docker/ksqldb/migrations:/share/ksql-migrations:z


# docker exec -it ksqldb-cli ksql http://ksqldb:8088
#  ksqldb-cli:
#    image: confluentinc/ksqldb-cli:0.22.0
#    container_name: ksqldb-cli
#    depends_on:
#      - kafka
#      - ksqldb
#    entrypoint: /bin/sh
#    tty: true

volumes:
  kafka_data:
